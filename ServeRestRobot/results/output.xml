<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3.2 (Python 3.9.6 on darwin)" generated="2025-09-12T12:45:50.826506" rpa="false" schemaversion="5">
<suite id="s1" name="Tests" source="/Users/mario/Documents/GitHub/Compass/ServeRestRobot/tests">
<suite id="s1-s1" name="Login" source="/Users/mario/Documents/GitHub/Compass/ServeRestRobot/tests/login">
<suite id="s1-s1-s1" name="Login Test" source="/Users/mario/Documents/GitHub/Compass/ServeRestRobot/tests/login/login_test.robot">
<kw name="Setup Usuario Comum" type="SETUP">
<kw name="Iniciar Sessao" owner="config">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-09-12T12:45:50.924729" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>serverest</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-09-12T12:45:50.924658" elapsed="0.000155"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:50.924337" elapsed="0.000511"/>
</kw>
<kw name="Importar JSON" owner="common">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:50.925074" level="INFO">${file_path} = /Users/mario/Documents/GitHub/Compass/ServeRestRobot/support/fixtures/login.json</msg>
<var>${file_path}</var>
<arg>${EXECDIR}/support/fixtures/${file_name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T12:45:50.924995" elapsed="0.000090"/>
</kw>
<kw name="Load Json From File" owner="JSONLibrary">
<msg time="2025-09-12T12:45:50.925481" level="INFO">${json} = {'login_usuario_comum': {'email': 'usuario.teste@email.com', 'password': 'teste123'}, 'login_usuario_adm': {'email': 'admin.teste@email.com', 'password': 'admin123'}, 'email_nao_cadastrado': {'email':...</msg>
<var>${json}</var>
<arg>${file_path}</arg>
<doc>Load JSON from file.</doc>
<status status="PASS" start="2025-09-12T12:45:50.925128" elapsed="0.000368"/>
</kw>
<return>
<value>${json}</value>
<status status="PASS" start="2025-09-12T12:45:50.925519" elapsed="0.000022"/>
</return>
<msg time="2025-09-12T12:45:50.925596" level="INFO">${json} = {'login_usuario_comum': {'email': 'usuario.teste@email.com', 'password': 'teste123'}, 'login_usuario_adm': {'email': 'admin.teste@email.com', 'password': 'admin123'}, 'email_nao_cadastrado': {'email':...</msg>
<var>${json}</var>
<arg>login.json</arg>
<status status="PASS" start="2025-09-12T12:45:50.924911" elapsed="0.000696"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:50.925829" level="INFO">${payload_login} = {'email': 'usuario.teste@email.com', 'password': 'teste123'}</msg>
<var>${payload_login}</var>
<arg>${json["login_usuario_comum"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T12:45:50.925654" elapsed="0.000186"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T12:45:50.926213" level="INFO">&amp;{payload_usuario} = { nome=Usuario Comum | email=usuario.teste@email.com | password=teste123 | administrador=false }</msg>
<var>&amp;{payload_usuario}</var>
<arg>nome=Usuario Comum</arg>
<arg>email=${payload_login["email"]}</arg>
<arg>password=${payload_login["password"]}</arg>
<arg>administrador=false</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T12:45:50.925888" elapsed="0.000337"/>
</kw>
<kw name="POST Usuario" owner="api_keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T12:45:50.926471" level="INFO">&amp;{header} = { Content-Type=application/json }</msg>
<var>&amp;{header}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T12:45:50.926403" elapsed="0.000079"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T12:45:51.436559" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '111'} 
 body=b'{"nome": "Usuario Comum", "email": "usuario.teste@email.com", "password": "teste123", "administrador": "false"}' 
 </msg>
<msg time="2025-09-12T12:45:51.436942" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=400, reason=Bad Request 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': 'b7cd82bec26c546919704aa5b49fb89b;o=1', 'date': 'Fri, 12 Sep 2025 15:45:51 GMT', 'server': 'Google Frontend', 'Content-Length': '53'} 
 body={
    "message": "Este email já está sendo usado"
} 
 </msg>
<msg time="2025-09-12T12:45:51.437155" level="INFO">/Users/mario/Library/Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2025-09-12T12:45:51.437567" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>headers=&amp;{header}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T12:45:50.926524" elapsed="0.511115"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-09-12T12:45:51.437919" elapsed="0.000175"/>
</return>
<msg time="2025-09-12T12:45:51.438543" level="INFO">${resp_criar} = &lt;Response [400]&gt;</msg>
<var>${resp_criar}</var>
<arg>&amp;{payload_usuario}</arg>
<status status="PASS" start="2025-09-12T12:45:50.926292" elapsed="0.512308"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-12T12:45:51.441175" level="INFO">Usuário já existe ou erro ao criar</msg>
<arg>Usuário já existe ou erro ao criar</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-12T12:45:51.440783" elapsed="0.000472"/>
</kw>
<arg>'${resp_criar.status_code}' != '201'</arg>
<arg>Log</arg>
<arg>Usuário já existe ou erro ao criar</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-09-12T12:45:51.439219" elapsed="0.002107"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:50.924189" elapsed="0.517219"/>
</kw>
<test id="s1-s1-s1-t1" name="US002-TC01: Realizar login com credenciais corretas" line="21">
<kw name="Importar JSON" owner="common">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:51.442746" level="INFO">${file_path} = /Users/mario/Documents/GitHub/Compass/ServeRestRobot/support/fixtures/login.json</msg>
<var>${file_path}</var>
<arg>${EXECDIR}/support/fixtures/${file_name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T12:45:51.442500" elapsed="0.000282"/>
</kw>
<kw name="Load Json From File" owner="JSONLibrary">
<msg time="2025-09-12T12:45:51.443352" level="INFO">${json} = {'login_usuario_comum': {'email': 'usuario.teste@email.com', 'password': 'teste123'}, 'login_usuario_adm': {'email': 'admin.teste@email.com', 'password': 'admin123'}, 'email_nao_cadastrado': {'email':...</msg>
<var>${json}</var>
<arg>${file_path}</arg>
<doc>Load JSON from file.</doc>
<status status="PASS" start="2025-09-12T12:45:51.442914" elapsed="0.000474"/>
</kw>
<return>
<value>${json}</value>
<status status="PASS" start="2025-09-12T12:45:51.443486" elapsed="0.000063"/>
</return>
<msg time="2025-09-12T12:45:51.443846" level="INFO">${json} = {'login_usuario_comum': {'email': 'usuario.teste@email.com', 'password': 'teste123'}, 'login_usuario_adm': {'email': 'admin.teste@email.com', 'password': 'admin123'}, 'email_nao_cadastrado': {'email':...</msg>
<var>${json}</var>
<arg>login.json</arg>
<status status="PASS" start="2025-09-12T12:45:51.442146" elapsed="0.001736"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:51.444697" level="INFO">${payload} = {'email': 'usuario.teste@email.com', 'password': 'teste123'}</msg>
<var>${payload}</var>
<arg>${json["login_usuario_comum"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T12:45:51.444105" elapsed="0.000623"/>
</kw>
<kw name="POST Login" owner="api_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T12:45:51.626048" level="INFO">POST Request : url=https://serverest.dev/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '60', 'Content-Type': 'application/json'} 
 body=b'{"email": "usuario.teste@email.com", "password": "teste123"}' 
 </msg>
<msg time="2025-09-12T12:45:51.626353" level="INFO">POST Response : url=https://serverest.dev/login 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': 'd7c45bf75d23548619704aa5b49fb05a', 'date': 'Fri, 12 Sep 2025 15:45:51 GMT', 'server': 'Google Frontend', 'Content-Length': '283'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InVzdWFyaW8udGVzdGVAZW1haWwuY29tIiwicGFzc3dvcmQiOiJ0ZXN0ZTEyMyIsImlhdCI6MTc1NzY5MTk1MSwiZXhwIjoxNzU3NjkyNTUxfQ.YnFH6N0Wif3OKL-x5unUV2sqN259aJIJxbsNksl3ZKY"
} 
 </msg>
<msg time="2025-09-12T12:45:51.626558" level="INFO">/Users/mario/Library/Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2025-09-12T12:45:51.626948" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/login</arg>
<arg>json=${payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T12:45:51.445319" elapsed="0.181697"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-09-12T12:45:51.627270" elapsed="0.000172"/>
</return>
<msg time="2025-09-12T12:45:51.627759" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>${payload}</arg>
<status status="PASS" start="2025-09-12T12:45:51.444962" elapsed="0.182833"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T12:45:51.629163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T12:45:51.628275" elapsed="0.000974"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>authorization</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T12:45:51.629485" elapsed="0.000590"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:51.441501" elapsed="0.188810"/>
</test>
<test id="s1-s1-s1-t2" name="US002-TC02: Tentar realizar login com um e-mail não cadastrado" line="29">
<kw name="Importar JSON" owner="common">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:51.631960" level="INFO">${file_path} = /Users/mario/Documents/GitHub/Compass/ServeRestRobot/support/fixtures/login.json</msg>
<var>${file_path}</var>
<arg>${EXECDIR}/support/fixtures/${file_name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T12:45:51.631736" elapsed="0.000257"/>
</kw>
<kw name="Load Json From File" owner="JSONLibrary">
<msg time="2025-09-12T12:45:51.632712" level="INFO">${json} = {'login_usuario_comum': {'email': 'usuario.teste@email.com', 'password': 'teste123'}, 'login_usuario_adm': {'email': 'admin.teste@email.com', 'password': 'admin123'}, 'email_nao_cadastrado': {'email':...</msg>
<var>${json}</var>
<arg>${file_path}</arg>
<doc>Load JSON from file.</doc>
<status status="PASS" start="2025-09-12T12:45:51.632118" elapsed="0.000630"/>
</kw>
<return>
<value>${json}</value>
<status status="PASS" start="2025-09-12T12:45:51.632810" elapsed="0.000045"/>
</return>
<msg time="2025-09-12T12:45:51.633008" level="INFO">${json} = {'login_usuario_comum': {'email': 'usuario.teste@email.com', 'password': 'teste123'}, 'login_usuario_adm': {'email': 'admin.teste@email.com', 'password': 'admin123'}, 'email_nao_cadastrado': {'email':...</msg>
<var>${json}</var>
<arg>login.json</arg>
<status status="PASS" start="2025-09-12T12:45:51.631387" elapsed="0.001647"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:51.633719" level="INFO">${payload} = {'email': 'nao.existe@email.com', 'password': 'senha123'}</msg>
<var>${payload}</var>
<arg>${json["email_nao_cadastrado"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T12:45:51.633224" elapsed="0.000523"/>
</kw>
<kw name="POST Login" owner="api_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T12:45:51.810167" level="INFO">POST Request : url=https://serverest.dev/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '57', 'Content-Type': 'application/json'} 
 body=b'{"email": "nao.existe@email.com", "password": "senha123"}' 
 </msg>
<msg time="2025-09-12T12:45:51.810396" level="INFO">POST Response : url=https://serverest.dev/login 
 status=401, reason=Unauthorized 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': 'da51373d34668ee719704aa5b49fbd1f', 'date': 'Fri, 12 Sep 2025 15:45:51 GMT', 'server': 'Google Frontend', 'Content-Length': '48'} 
 body={
    "message": "Email e/ou senha inválidos"
} 
 </msg>
<msg time="2025-09-12T12:45:51.810558" level="INFO">/Users/mario/Library/Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2025-09-12T12:45:51.810839" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/login</arg>
<arg>json=${payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T12:45:51.634573" elapsed="0.176312"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-09-12T12:45:51.811063" elapsed="0.000110"/>
</return>
<msg time="2025-09-12T12:45:51.811444" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<var>${response}</var>
<arg>${payload}</arg>
<status status="PASS" start="2025-09-12T12:45:51.633975" elapsed="0.177634"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T12:45:51.812855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>401</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T12:45:51.812046" elapsed="0.000888"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response.json()["message"]}</arg>
<arg>Email e/ou senha inválidos</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-09-12T12:45:51.813129" elapsed="0.000542"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:51.630608" elapsed="0.183273"/>
</test>
<test id="s1-s1-s1-t3" name="US002-TC03: Tentar realizar login com senha incorreta" line="37">
<kw name="Importar JSON" owner="common">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:51.815400" level="INFO">${file_path} = /Users/mario/Documents/GitHub/Compass/ServeRestRobot/support/fixtures/login.json</msg>
<var>${file_path}</var>
<arg>${EXECDIR}/support/fixtures/${file_name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T12:45:51.815197" elapsed="0.000231"/>
</kw>
<kw name="Load Json From File" owner="JSONLibrary">
<msg time="2025-09-12T12:45:51.816120" level="INFO">${json} = {'login_usuario_comum': {'email': 'usuario.teste@email.com', 'password': 'teste123'}, 'login_usuario_adm': {'email': 'admin.teste@email.com', 'password': 'admin123'}, 'email_nao_cadastrado': {'email':...</msg>
<var>${json}</var>
<arg>${file_path}</arg>
<doc>Load JSON from file.</doc>
<status status="PASS" start="2025-09-12T12:45:51.815545" elapsed="0.000605"/>
</kw>
<return>
<value>${json}</value>
<status status="PASS" start="2025-09-12T12:45:51.816202" elapsed="0.000044"/>
</return>
<msg time="2025-09-12T12:45:51.816385" level="INFO">${json} = {'login_usuario_comum': {'email': 'usuario.teste@email.com', 'password': 'teste123'}, 'login_usuario_adm': {'email': 'admin.teste@email.com', 'password': 'admin123'}, 'email_nao_cadastrado': {'email':...</msg>
<var>${json}</var>
<arg>login.json</arg>
<status status="PASS" start="2025-09-12T12:45:51.814882" elapsed="0.001528"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:51.817043" level="INFO">${payload} = {'email': 'usuario.teste@email.com', 'password': 'errada123'}</msg>
<var>${payload}</var>
<arg>${json["senha_incorreta"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T12:45:51.816585" elapsed="0.000483"/>
</kw>
<kw name="POST Login" owner="api_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T12:45:52.003281" level="INFO">POST Request : url=https://serverest.dev/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '61', 'Content-Type': 'application/json'} 
 body=b'{"email": "usuario.teste@email.com", "password": "errada123"}' 
 </msg>
<msg time="2025-09-12T12:45:52.003406" level="INFO">POST Response : url=https://serverest.dev/login 
 status=401, reason=Unauthorized 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': 'a256ce988d08939a19704aa5b49fb9d3', 'date': 'Fri, 12 Sep 2025 15:45:51 GMT', 'server': 'Google Frontend', 'Content-Length': '48'} 
 body={
    "message": "Email e/ou senha inválidos"
} 
 </msg>
<msg time="2025-09-12T12:45:52.003491" level="INFO">/Users/mario/Library/Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2025-09-12T12:45:52.003704" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/login</arg>
<arg>json=${payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T12:45:51.817620" elapsed="0.186137"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-09-12T12:45:52.003871" elapsed="0.000061"/>
</return>
<msg time="2025-09-12T12:45:52.004107" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<var>${response}</var>
<arg>${payload}</arg>
<status status="PASS" start="2025-09-12T12:45:51.817290" elapsed="0.186843"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T12:45:52.004852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>401</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T12:45:52.004368" elapsed="0.000544"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response.json()["message"]}</arg>
<arg>Email e/ou senha inválidos</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-09-12T12:45:52.005054" elapsed="0.000451"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:51.814169" elapsed="0.191530"/>
</test>
<test id="s1-s1-s1-t4" name="US002-TC04: Tentar realizar login com campos vazios" line="45">
<kw name="Importar JSON" owner="common">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:52.006743" level="INFO">${file_path} = /Users/mario/Documents/GitHub/Compass/ServeRestRobot/support/fixtures/login.json</msg>
<var>${file_path}</var>
<arg>${EXECDIR}/support/fixtures/${file_name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T12:45:52.006586" elapsed="0.000179"/>
</kw>
<kw name="Load Json From File" owner="JSONLibrary">
<msg time="2025-09-12T12:45:52.007139" level="INFO">${json} = {'login_usuario_comum': {'email': 'usuario.teste@email.com', 'password': 'teste123'}, 'login_usuario_adm': {'email': 'admin.teste@email.com', 'password': 'admin123'}, 'email_nao_cadastrado': {'email':...</msg>
<var>${json}</var>
<arg>${file_path}</arg>
<doc>Load JSON from file.</doc>
<status status="PASS" start="2025-09-12T12:45:52.006851" elapsed="0.000313"/>
</kw>
<return>
<value>${json}</value>
<status status="PASS" start="2025-09-12T12:45:52.007202" elapsed="0.000026"/>
</return>
<msg time="2025-09-12T12:45:52.007326" level="INFO">${json} = {'login_usuario_comum': {'email': 'usuario.teste@email.com', 'password': 'teste123'}, 'login_usuario_adm': {'email': 'admin.teste@email.com', 'password': 'admin123'}, 'email_nao_cadastrado': {'email':...</msg>
<var>${json}</var>
<arg>login.json</arg>
<status status="PASS" start="2025-09-12T12:45:52.006352" elapsed="0.000992"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:52.007808" level="INFO">${payload} = {'email': '', 'password': ''}</msg>
<var>${payload}</var>
<arg>${json["campos_vazios"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T12:45:52.007450" elapsed="0.000379"/>
</kw>
<kw name="POST Login" owner="api_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T12:45:52.183995" level="INFO">POST Request : url=https://serverest.dev/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '29', 'Content-Type': 'application/json'} 
 body=b'{"email": "", "password": ""}' 
 </msg>
<msg time="2025-09-12T12:45:52.184130" level="INFO">POST Response : url=https://serverest.dev/login 
 status=400, reason=Bad Request 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '23876ed28957a0f319704aa5b49fbbaf', 'date': 'Fri, 12 Sep 2025 15:45:52 GMT', 'server': 'Google Frontend', 'Content-Length': '104'} 
 body={
    "email": "email não pode ficar em branco",
    "password": "password não pode ficar em branco"
} 
 </msg>
<msg time="2025-09-12T12:45:52.184192" level="INFO">/Users/mario/Library/Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2025-09-12T12:45:52.184302" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/login</arg>
<arg>json=${payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T12:45:52.008207" elapsed="0.176116"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-09-12T12:45:52.184385" elapsed="0.000034"/>
</return>
<msg time="2025-09-12T12:45:52.184529" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>${payload}</arg>
<status status="PASS" start="2025-09-12T12:45:52.007969" elapsed="0.176579"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T12:45:52.185035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T12:45:52.184684" elapsed="0.000395"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response.json()["email"]}</arg>
<arg>email não pode ficar em branco</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-09-12T12:45:52.185198" elapsed="0.000330"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response.json()["password"]}</arg>
<arg>password não pode ficar em branco</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-09-12T12:45:52.185636" elapsed="0.000290"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:52.005907" elapsed="0.180128"/>
</test>
<test id="s1-s1-s1-t5" name="US002-TC05: Tentar realizar login com formato de e-mail inválido" line="52">
<kw name="Importar JSON" owner="common">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:52.186836" level="INFO">${file_path} = /Users/mario/Documents/GitHub/Compass/ServeRestRobot/support/fixtures/login.json</msg>
<var>${file_path}</var>
<arg>${EXECDIR}/support/fixtures/${file_name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T12:45:52.186696" elapsed="0.000160"/>
</kw>
<kw name="Load Json From File" owner="JSONLibrary">
<msg time="2025-09-12T12:45:52.187213" level="INFO">${json} = {'login_usuario_comum': {'email': 'usuario.teste@email.com', 'password': 'teste123'}, 'login_usuario_adm': {'email': 'admin.teste@email.com', 'password': 'admin123'}, 'email_nao_cadastrado': {'email':...</msg>
<var>${json}</var>
<arg>${file_path}</arg>
<doc>Load JSON from file.</doc>
<status status="PASS" start="2025-09-12T12:45:52.186937" elapsed="0.000295"/>
</kw>
<return>
<value>${json}</value>
<status status="PASS" start="2025-09-12T12:45:52.187264" elapsed="0.000019"/>
</return>
<msg time="2025-09-12T12:45:52.187365" level="INFO">${json} = {'login_usuario_comum': {'email': 'usuario.teste@email.com', 'password': 'teste123'}, 'login_usuario_adm': {'email': 'admin.teste@email.com', 'password': 'admin123'}, 'email_nao_cadastrado': {'email':...</msg>
<var>${json}</var>
<arg>login.json</arg>
<status status="PASS" start="2025-09-12T12:45:52.186503" elapsed="0.000878"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:52.187726" level="INFO">${payload} = {'email': 'email-invalido', 'password': 'teste123'}</msg>
<var>${payload}</var>
<arg>${json["formato_email_invalido"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T12:45:52.187473" elapsed="0.000271"/>
</kw>
<kw name="POST Login" owner="api_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T12:45:52.371891" level="INFO">POST Request : url=https://serverest.dev/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '51', 'Content-Type': 'application/json'} 
 body=b'{"email": "email-invalido", "password": "teste123"}' 
 </msg>
<msg time="2025-09-12T12:45:52.372089" level="INFO">POST Response : url=https://serverest.dev/login 
 status=400, reason=Bad Request 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '617d43e5edac5f4319704aa5b49fbe02', 'date': 'Fri, 12 Sep 2025 15:45:52 GMT', 'server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "email": "email deve ser um email válido"
} 
 </msg>
<msg time="2025-09-12T12:45:52.372208" level="INFO">/Users/mario/Library/Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2025-09-12T12:45:52.372491" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/login</arg>
<arg>json=${payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T12:45:52.188070" elapsed="0.184465"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-09-12T12:45:52.372687" elapsed="0.000097"/>
</return>
<msg time="2025-09-12T12:45:52.373030" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>${payload}</arg>
<status status="PASS" start="2025-09-12T12:45:52.187859" elapsed="0.185197"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T12:45:52.374295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T12:45:52.373418" elapsed="0.000985"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response.json()["email"]}</arg>
<arg>email deve ser um email válido</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-09-12T12:45:52.374691" elapsed="0.000581"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:52.186174" elapsed="0.189299"/>
</test>
<doc>Cenários de teste para o endpoint /login, cobrindo a User Story US002</doc>
<status status="PASS" start="2025-09-12T12:45:50.836272" elapsed="1.539795"/>
</suite>
<status status="PASS" start="2025-09-12T12:45:50.835860" elapsed="1.540983"/>
</suite>
<suite id="s1-s2" name="Produtos" source="/Users/mario/Documents/GitHub/Compass/ServeRestRobot/tests/produtos">
<suite id="s1-s2-s1" name="Produtos Test" source="/Users/mario/Documents/GitHub/Compass/ServeRestRobot/tests/produtos/produtos_test.robot">
<kw name="Realizar Login Como Administrador" type="SETUP">
<kw name="Iniciar Sessao" owner="config">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-09-12T12:45:52.482466" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>serverest</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-09-12T12:45:52.482392" elapsed="0.000161"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:52.482157" elapsed="0.000430"/>
</kw>
<kw name="Criar Usuario Valido" owner="dynamics">
<kw name="First Name" owner="FakerLibrary">
<msg time="2025-09-12T12:45:52.482885" level="INFO">${nome} = Craig</msg>
<var>${nome}</var>
<status status="PASS" start="2025-09-12T12:45:52.482783" elapsed="0.000113"/>
</kw>
<kw name="Email" owner="FakerLibrary">
<msg time="2025-09-12T12:45:52.483038" level="INFO">${email} = shawn93@example.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-09-12T12:45:52.482940" elapsed="0.000109"/>
</kw>
<kw name="Password" owner="FakerLibrary">
<msg time="2025-09-12T12:45:52.483181" level="INFO">${senha} = &amp;g0+74Fj</msg>
<var>${senha}</var>
<arg>length=8</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="PASS" start="2025-09-12T12:45:52.483093" elapsed="0.000097"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T12:45:52.483402" level="INFO">&amp;{payload} = { nome=Craig | email=shawn93@example.com | password=&amp;g0+74Fj | administrador=true }</msg>
<var>&amp;{payload}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${admin}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T12:45:52.483239" elapsed="0.000175"/>
</kw>
<return>
<value>&amp;{payload}</value>
<status status="PASS" start="2025-09-12T12:45:52.483439" elapsed="0.000018"/>
</return>
<msg time="2025-09-12T12:45:52.483528" level="INFO">&amp;{payload_admin} = { nome=Craig | email=shawn93@example.com | password=&amp;g0+74Fj | administrador=true }</msg>
<var>&amp;{payload_admin}</var>
<arg>true</arg>
<status status="PASS" start="2025-09-12T12:45:52.482653" elapsed="0.000886"/>
</kw>
<kw name="POST Usuario" owner="api_keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T12:45:52.483782" level="INFO">&amp;{header} = { Content-Type=application/json }</msg>
<var>&amp;{header}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T12:45:52.483711" elapsed="0.000082"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T12:45:52.963667" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '98'} 
 body=b'{"nome": "Craig", "email": "shawn93@example.com", "password": "&amp;g0+74Fj", "administrador": "true"}' 
 </msg>
<msg time="2025-09-12T12:45:52.963764" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '24df05619c4c77c31ad9fa0f81fd824c', 'date': 'Fri, 12 Sep 2025 15:45:52 GMT', 'server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "17RAuj7zScs82Ict"
} 
 </msg>
<msg time="2025-09-12T12:45:52.963841" level="INFO">/Users/mario/Library/Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2025-09-12T12:45:52.963978" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>headers=&amp;{header}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T12:45:52.483841" elapsed="0.480163"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-09-12T12:45:52.964087" elapsed="0.000045"/>
</return>
<msg time="2025-09-12T12:45:52.964275" level="INFO">${resp_criar} = &lt;Response [201]&gt;</msg>
<var>${resp_criar}</var>
<arg>&amp;{payload_admin}</arg>
<status status="PASS" start="2025-09-12T12:45:52.483602" elapsed="0.480698"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${resp_criar.status_code}' != '201'</arg>
<arg>Log</arg>
<arg>Usuário admin já existe ou erro ao criar</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-09-12T12:45:52.964464" elapsed="0.000457"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T12:45:52.965781" level="INFO">&amp;{payload_login} = { email=shawn93@example.com | password=&amp;g0+74Fj }</msg>
<var>&amp;{payload_login}</var>
<arg>email=${payload_admin.email}</arg>
<arg>password=${payload_admin.password}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T12:45:52.965053" elapsed="0.000756"/>
</kw>
<kw name="POST Login" owner="api_keywords">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T12:45:53.139724" level="INFO">POST Request : url=https://serverest.dev/login 
 path_url=/login 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '56', 'Content-Type': 'application/json'} 
 body=b'{"email": "shawn93@example.com", "password": "&amp;g0+74Fj"}' 
 </msg>
<msg time="2025-09-12T12:45:53.140018" level="INFO">POST Response : url=https://serverest.dev/login 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '98727846bf08c8b21ad9fa0f81fd8564', 'date': 'Fri, 12 Sep 2025 15:45:53 GMT', 'server': 'Google Frontend', 'Content-Length': '277'} 
 body={
    "message": "Login realizado com sucesso",
    "authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNoYXduOTNAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6IiZnMCs3NEZqIiwiaWF0IjoxNzU3NjkxOTUzLCJleHAiOjE3NTc2OTI1NTN9.uSxu4NGr_MUA57EFArvt4Rwll6oammRimMTRqANGJKE"
} 
 </msg>
<msg time="2025-09-12T12:45:53.140203" level="INFO">/Users/mario/Library/Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2025-09-12T12:45:53.140752" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/login</arg>
<arg>json=${payload}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T12:45:52.966257" elapsed="0.174572"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-09-12T12:45:53.141056" elapsed="0.000136"/>
</return>
<msg time="2025-09-12T12:45:53.141595" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>${payload_login}</arg>
<status status="PASS" start="2025-09-12T12:45:52.965985" elapsed="0.175670"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T12:45:53.143292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T12:45:53.142112" elapsed="0.001331"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:53.145218" level="INFO">${TOKEN_ADMIN} = Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNoYXduOTNAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6IiZnMCs3NEZqIiwiaWF0IjoxNzU3NjkxOTUzLCJleHAiOjE3NTc2OTI1NTN9.uSxu4NGr_MUA57EFArvt4Rwll6oammRimMTRqAN...</msg>
<arg>${TOKEN_ADMIN}</arg>
<arg>${response.json()['authorization']}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-09-12T12:45:53.143824" elapsed="0.001454"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:52.482042" elapsed="0.663332"/>
</kw>
<test id="s1-s2-s1-t1" name="US003-TC01: Cadastrar produto com token de administrador" line="10">
<kw name="GIVEN que eu tenha os dados de um novo produto">
<kw name="Criar Produto Valido" owner="dynamics">
<kw name="Word" owner="FakerLibrary">
<msg time="2025-09-12T12:45:53.147670" level="INFO">${nome} = wall</msg>
<var>${nome}</var>
<doc>Generate a word.</doc>
<status status="PASS" start="2025-09-12T12:45:53.147084" elapsed="0.000620"/>
</kw>
<kw name="Random Int" owner="FakerLibrary">
<msg time="2025-09-12T12:45:53.148160" level="INFO">${preco} = 4748</msg>
<var>${preco}</var>
<arg>min=10</arg>
<arg>max=5000</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="PASS" start="2025-09-12T12:45:53.147845" elapsed="0.000343"/>
</kw>
<kw name="Sentence" owner="FakerLibrary">
<msg time="2025-09-12T12:45:53.148531" level="INFO">${descricao} = Actually pass protect language which.</msg>
<var>${descricao}</var>
<doc>Generate a sentence.</doc>
<status status="PASS" start="2025-09-12T12:45:53.148320" elapsed="0.000240"/>
</kw>
<kw name="Random Int" owner="FakerLibrary">
<msg time="2025-09-12T12:45:53.148946" level="INFO">${quantidade} = 95</msg>
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="PASS" start="2025-09-12T12:45:53.148683" elapsed="0.000291"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T12:45:53.149682" level="INFO">&amp;{payload} = { nome=wall | preco=4748 | descricao=Actually pass protect language which. | quantidade=95 }</msg>
<var>&amp;{payload}</var>
<arg>nome=${nome}</arg>
<arg>preco=${preco}</arg>
<arg>descricao=${descricao}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T12:45:53.149128" elapsed="0.000586"/>
</kw>
<return>
<value>&amp;{payload}</value>
<status status="PASS" start="2025-09-12T12:45:53.149780" elapsed="0.000053"/>
</return>
<msg time="2025-09-12T12:45:53.150045" level="INFO">&amp;{payload_produto} = { nome=wall | preco=4748 | descricao=Actually pass protect language which. | quantidade=95 }</msg>
<var>&amp;{payload_produto}</var>
<status status="PASS" start="2025-09-12T12:45:53.146821" elapsed="0.003254"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:53.150998" level="INFO">${payload} = {'nome': 'wall', 'preco': 4748, 'descricao': 'Actually pass protect language which.', 'quantidade': 95}</msg>
<arg>${payload}</arg>
<arg>&amp;{payload_produto}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-09-12T12:45:53.150217" elapsed="0.000831"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:53.146394" elapsed="0.004718"/>
</kw>
<kw name="WHEN eu envio uma requisição POST para /produtos com token de administrador">
<kw name="POST Produto" owner="api_keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T12:45:53.152443" level="INFO">&amp;{header} = { Content-Type=application/json | Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNoYXduOTNAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6IiZnMCs3NEZqIiwiaWF0IjoxNzU3NjkxOTUzLCJleHAiOjE3NTc2...</msg>
<var>&amp;{header}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T12:45:53.152178" elapsed="0.000300"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T12:45:53.347705" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNoYXduOTNAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6IiZnMCs3NEZqIiwiaWF0IjoxNzU3NjkxOTUzLCJleHAiOjE3NTc2OTI1NTN9.uSxu4NGr_MUA57EFArvt4Rwll6oammRimMTRqANGJKE', 'Content-Length': '103'} 
 body=b'{"nome": "wall", "preco": 4748, "descricao": "Actually pass protect language which.", "quantidade": 95}' 
 </msg>
<msg time="2025-09-12T12:45:53.348029" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '09b6b22544f880771ad9fa0f81fd82a1', 'date': 'Fri, 12 Sep 2025 15:45:53 GMT', 'server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "QqH6pLN5DCujhRZF"
} 
 </msg>
<msg time="2025-09-12T12:45:53.348217" level="INFO">/Users/mario/Library/Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2025-09-12T12:45:53.348581" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos</arg>
<arg>json=${payload}</arg>
<arg>headers=&amp;{header}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T12:45:53.152612" elapsed="0.196042"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-09-12T12:45:53.348883" elapsed="0.000143"/>
</return>
<msg time="2025-09-12T12:45:53.349417" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>${TOKEN_ADMIN}</arg>
<arg>${payload}</arg>
<status status="PASS" start="2025-09-12T12:45:53.151773" elapsed="0.197882"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:53.350583" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-09-12T12:45:53.350170" elapsed="0.000464"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:53.352081" level="INFO">${ID_PRODUTO} = QqH6pLN5DCujhRZF</msg>
<arg>${ID_PRODUTO}</arg>
<arg>${response.json()['_id']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-09-12T12:45:53.350800" elapsed="0.001340"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:53.151400" elapsed="0.200822"/>
</kw>
<kw name="THEN o produto deve ser criado com sucesso e status 201">
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T12:45:53.353516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T12:45:53.353014" elapsed="0.000572"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response.json()["message"]}</arg>
<arg>Cadastro realizado com sucesso</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-09-12T12:45:53.353726" elapsed="0.000478"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:53.352601" elapsed="0.001678"/>
</kw>
<kw name="Deletar Produto Criado Se Existir" type="TEARDOWN">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="DELETE Produto por ID" owner="api_keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T12:45:53.356166" level="INFO">&amp;{header} = { Content-Type=application/json | Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNoYXduOTNAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6IiZnMCs3NEZqIiwiaWF0IjoxNzU3NjkxOTUzLCJleHAiOjE3NTc2...</msg>
<var>&amp;{header}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T12:45:53.355842" elapsed="0.000362"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-09-12T12:45:53.547608" level="INFO">DELETE Request : url=https://serverest.dev/produtos/QqH6pLN5DCujhRZF 
 path_url=/produtos/QqH6pLN5DCujhRZF 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNoYXduOTNAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6IiZnMCs3NEZqIiwiaWF0IjoxNzU3NjkxOTUzLCJleHAiOjE3NTc2OTI1NTN9.uSxu4NGr_MUA57EFArvt4Rwll6oammRimMTRqANGJKE', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-09-12T12:45:53.547930" level="INFO">DELETE Response : url=https://serverest.dev/produtos/QqH6pLN5DCujhRZF 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '336db6cc67c57e5a1ad9fa0f81fd8d07', 'date': 'Fri, 12 Sep 2025 15:45:53 GMT', 'server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg time="2025-09-12T12:45:53.548136" level="INFO">/Users/mario/Library/Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2025-09-12T12:45:53.548506" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos/${id_produto}</arg>
<arg>headers=&amp;{header}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T12:45:53.356349" elapsed="0.192232"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-09-12T12:45:53.548846" elapsed="0.000177"/>
</return>
<arg>${TOKEN_ADMIN}</arg>
<arg>${ID_PRODUTO}</arg>
<status status="PASS" start="2025-09-12T12:45:53.355382" elapsed="0.194018"/>
</kw>
<arg>'${ID_PRODUTO}' != '${null}'</arg>
<arg>DELETE Produto por ID</arg>
<arg>${TOKEN_ADMIN}</arg>
<arg>${ID_PRODUTO}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-09-12T12:45:53.355007" elapsed="0.194516"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:53.550815" level="INFO">${ID_PRODUTO} = None</msg>
<arg>${ID_PRODUTO}</arg>
<arg>${null}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-09-12T12:45:53.550106" elapsed="0.000797"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:53.354637" elapsed="0.196404"/>
</kw>
<tag>happy_path</tag>
<tag>TC01</tag>
<tag>US003</tag>
<status status="PASS" start="2025-09-12T12:45:53.145536" elapsed="0.405700"/>
</test>
<test id="s1-s2-s1-t2" name="US003-TC02: Tentar cadastrar produto sem token de autenticação" line="16">
<kw name="GIVEN que eu tenha os dados de um novo produto">
<kw name="Criar Produto Valido" owner="dynamics">
<kw name="Word" owner="FakerLibrary">
<msg time="2025-09-12T12:45:53.553301" level="INFO">${nome} = education</msg>
<var>${nome}</var>
<doc>Generate a word.</doc>
<status status="PASS" start="2025-09-12T12:45:53.552997" elapsed="0.000337"/>
</kw>
<kw name="Random Int" owner="FakerLibrary">
<msg time="2025-09-12T12:45:53.553785" level="INFO">${preco} = 51</msg>
<var>${preco}</var>
<arg>min=10</arg>
<arg>max=5000</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="PASS" start="2025-09-12T12:45:53.553468" elapsed="0.000344"/>
</kw>
<kw name="Sentence" owner="FakerLibrary">
<msg time="2025-09-12T12:45:53.554131" level="INFO">${descricao} = Talk recently fill consumer.</msg>
<var>${descricao}</var>
<doc>Generate a sentence.</doc>
<status status="PASS" start="2025-09-12T12:45:53.553936" elapsed="0.000217"/>
</kw>
<kw name="Random Int" owner="FakerLibrary">
<msg time="2025-09-12T12:45:53.554442" level="INFO">${quantidade} = 88</msg>
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="PASS" start="2025-09-12T12:45:53.554250" elapsed="0.000214"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T12:45:53.555000" level="INFO">&amp;{payload} = { nome=education | preco=51 | descricao=Talk recently fill consumer. | quantidade=88 }</msg>
<var>&amp;{payload}</var>
<arg>nome=${nome}</arg>
<arg>preco=${preco}</arg>
<arg>descricao=${descricao}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T12:45:53.554597" elapsed="0.000430"/>
</kw>
<return>
<value>&amp;{payload}</value>
<status status="PASS" start="2025-09-12T12:45:53.555084" elapsed="0.000122"/>
</return>
<msg time="2025-09-12T12:45:53.555543" level="INFO">&amp;{payload_produto} = { nome=education | preco=51 | descricao=Talk recently fill consumer. | quantidade=88 }</msg>
<var>&amp;{payload_produto}</var>
<status status="PASS" start="2025-09-12T12:45:53.552730" elapsed="0.002962"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:53.556831" level="INFO">${payload} = {'nome': 'education', 'preco': 51, 'descricao': 'Talk recently fill consumer.', 'quantidade': 88}</msg>
<arg>${payload}</arg>
<arg>&amp;{payload_produto}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-09-12T12:45:53.555906" elapsed="0.000987"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:53.552319" elapsed="0.004652"/>
</kw>
<kw name="WHEN eu envio uma requisição POST para /produtos sem token">
<kw name="POST Produto" owner="api_keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T12:45:53.558318" level="INFO">&amp;{header} = { Content-Type=application/json | Authorization=None }</msg>
<var>&amp;{header}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T12:45:53.558008" elapsed="0.000343"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T12:45:53.729303" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '97'} 
 body=b'{"nome": "education", "preco": 51, "descricao": "Talk recently fill consumer.", "quantidade": 88}' 
 </msg>
<msg time="2025-09-12T12:45:53.729548" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=401, reason=Unauthorized 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '7d9f9d73546b87001ad9fa0f81fd8bbc', 'date': 'Fri, 12 Sep 2025 15:45:53 GMT', 'server': 'Google Frontend', 'Content-Length': '103'} 
 body={
    "message": "Token de acesso ausente, inválido, expirado ou usuário do token não existe mais"
} 
 </msg>
<msg time="2025-09-12T12:45:53.729704" level="INFO">/Users/mario/Library/Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2025-09-12T12:45:53.730018" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos</arg>
<arg>json=${payload}</arg>
<arg>headers=&amp;{header}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T12:45:53.558496" elapsed="0.171569"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-09-12T12:45:53.730317" elapsed="0.000183"/>
</return>
<msg time="2025-09-12T12:45:53.730891" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<var>${response}</var>
<arg>${null}</arg>
<arg>${payload}</arg>
<status status="PASS" start="2025-09-12T12:45:53.557604" elapsed="0.173343"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:53.731967" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-09-12T12:45:53.731459" elapsed="0.000570"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:53.557226" elapsed="0.174887"/>
</kw>
<kw name="THEN a API deve retornar um erro de token ausente com status 401">
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T12:45:53.733762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>401</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T12:45:53.733015" elapsed="0.000835"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response.json()["message"]}</arg>
<arg>Token de acesso ausente, inválido, expirado ou usuário do token não existe mais</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-09-12T12:45:53.734004" elapsed="0.000533"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:53.732516" elapsed="0.002090"/>
</kw>
<kw name="Deletar Produto Criado Se Existir" type="TEARDOWN">
<kw name="Run Keyword If" owner="BuiltIn">
<arg>'${ID_PRODUTO}' != '${null}'</arg>
<arg>DELETE Produto por ID</arg>
<arg>${TOKEN_ADMIN}</arg>
<arg>${ID_PRODUTO}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-09-12T12:45:53.735295" elapsed="0.000222"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:53.735911" level="INFO">${ID_PRODUTO} = None</msg>
<arg>${ID_PRODUTO}</arg>
<arg>${null}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-09-12T12:45:53.735683" elapsed="0.000274"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:53.734938" elapsed="0.001082"/>
</kw>
<tag>sad_path</tag>
<tag>TC02</tag>
<tag>US003</tag>
<status status="PASS" start="2025-09-12T12:45:53.551577" elapsed="0.184549"/>
</test>
<test id="s1-s2-s1-t3" name="US003-TC03: Tentar cadastrar produto com nome já existente" line="22">
<kw name="GIVEN que eu já tenha um produto cadastrado">
<kw name="Criar Produto Valido" owner="dynamics">
<kw name="Word" owner="FakerLibrary">
<msg time="2025-09-12T12:45:53.738443" level="INFO">${nome} = third</msg>
<var>${nome}</var>
<doc>Generate a word.</doc>
<status status="PASS" start="2025-09-12T12:45:53.738143" elapsed="0.000336"/>
</kw>
<kw name="Random Int" owner="FakerLibrary">
<msg time="2025-09-12T12:45:53.738946" level="INFO">${preco} = 259</msg>
<var>${preco}</var>
<arg>min=10</arg>
<arg>max=5000</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="PASS" start="2025-09-12T12:45:53.738616" elapsed="0.000359"/>
</kw>
<kw name="Sentence" owner="FakerLibrary">
<msg time="2025-09-12T12:45:53.739335" level="INFO">${descricao} = Business city song another society.</msg>
<var>${descricao}</var>
<doc>Generate a sentence.</doc>
<status status="PASS" start="2025-09-12T12:45:53.739108" elapsed="0.000257"/>
</kw>
<kw name="Random Int" owner="FakerLibrary">
<msg time="2025-09-12T12:45:53.739754" level="INFO">${quantidade} = 99</msg>
<var>${quantidade}</var>
<arg>min=1</arg>
<arg>max=100</arg>
<doc>Generate a random integer between two integers ``min`` and ``max`` inclusive
while observing the provided ``step`` value.</doc>
<status status="PASS" start="2025-09-12T12:45:53.739494" elapsed="0.000288"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T12:45:53.740464" level="INFO">&amp;{payload} = { nome=third | preco=259 | descricao=Business city song another society. | quantidade=99 }</msg>
<var>&amp;{payload}</var>
<arg>nome=${nome}</arg>
<arg>preco=${preco}</arg>
<arg>descricao=${descricao}</arg>
<arg>quantidade=${quantidade}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T12:45:53.739956" elapsed="0.000544"/>
</kw>
<return>
<value>&amp;{payload}</value>
<status status="PASS" start="2025-09-12T12:45:53.740581" elapsed="0.000074"/>
</return>
<msg time="2025-09-12T12:45:53.740885" level="INFO">&amp;{payload_produto} = { nome=third | preco=259 | descricao=Business city song another society. | quantidade=99 }</msg>
<var>&amp;{payload_produto}</var>
<status status="PASS" start="2025-09-12T12:45:53.737852" elapsed="0.003225"/>
</kw>
<kw name="POST Produto" owner="api_keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T12:45:53.742147" level="INFO">&amp;{header} = { Content-Type=application/json | Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNoYXduOTNAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6IiZnMCs3NEZqIiwiaWF0IjoxNzU3NjkxOTUzLCJleHAiOjE3NTc2...</msg>
<var>&amp;{header}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T12:45:53.741769" elapsed="0.000439"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T12:45:53.924015" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNoYXduOTNAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6IiZnMCs3NEZqIiwiaWF0IjoxNzU3NjkxOTUzLCJleHAiOjE3NTc2OTI1NTN9.uSxu4NGr_MUA57EFArvt4Rwll6oammRimMTRqANGJKE', 'Content-Length': '101'} 
 body=b'{"nome": "third", "preco": 259, "descricao": "Business city song another society.", "quantidade": 99}' 
 </msg>
<msg time="2025-09-12T12:45:53.924320" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '07cebd5b4716ab051ad9fa0f81fd8042', 'date': 'Fri, 12 Sep 2025 15:45:53 GMT', 'server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "okCEjNHJvgCcMna6"
} 
 </msg>
<msg time="2025-09-12T12:45:53.924545" level="INFO">/Users/mario/Library/Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2025-09-12T12:45:53.924935" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos</arg>
<arg>json=${payload}</arg>
<arg>headers=&amp;{header}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T12:45:53.742377" elapsed="0.182634"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-09-12T12:45:53.925254" elapsed="0.000132"/>
</return>
<msg time="2025-09-12T12:45:53.925699" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>${TOKEN_ADMIN}</arg>
<arg>${payload_produto}</arg>
<status status="PASS" start="2025-09-12T12:45:53.741326" elapsed="0.184412"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T12:45:53.927096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T12:45:53.926185" elapsed="0.001004"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:53.928040" level="INFO">${ID_PRODUTO} = okCEjNHJvgCcMna6</msg>
<arg>${ID_PRODUTO}</arg>
<arg>${response.json()['_id']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-09-12T12:45:53.927383" elapsed="0.000702"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:53.928970" level="INFO">${payload} = {'nome': 'third', 'preco': 259, 'descricao': 'Business city song another society.', 'quantidade': 99}</msg>
<arg>${payload}</arg>
<arg>${payload_produto}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-09-12T12:45:53.928223" elapsed="0.000794"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:53.737047" elapsed="0.192047"/>
</kw>
<kw name="WHEN eu tento cadastrar outro produto com o mesmo nome">
<kw name="POST Produto" owner="api_keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T12:45:53.930670" level="INFO">&amp;{header} = { Content-Type=application/json | Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNoYXduOTNAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6IiZnMCs3NEZqIiwiaWF0IjoxNzU3NjkxOTUzLCJleHAiOjE3NTc2...</msg>
<var>&amp;{header}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T12:45:53.930349" elapsed="0.000353"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T12:45:54.128847" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNoYXduOTNAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6IiZnMCs3NEZqIiwiaWF0IjoxNzU3NjkxOTUzLCJleHAiOjE3NTc2OTI1NTN9.uSxu4NGr_MUA57EFArvt4Rwll6oammRimMTRqANGJKE', 'Content-Length': '101'} 
 body=b'{"nome": "third", "preco": 259, "descricao": "Business city song another society.", "quantidade": 99}' 
 </msg>
<msg time="2025-09-12T12:45:54.129181" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=400, reason=Bad Request 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '2d09817dbbd5b77b1ad9fa0f81fd8a99', 'date': 'Fri, 12 Sep 2025 15:45:54 GMT', 'server': 'Google Frontend', 'Content-Length': '53'} 
 body={
    "message": "Já existe produto com esse nome"
} 
 </msg>
<msg time="2025-09-12T12:45:54.129397" level="INFO">/Users/mario/Library/Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2025-09-12T12:45:54.129785" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos</arg>
<arg>json=${payload}</arg>
<arg>headers=&amp;{header}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T12:45:53.930845" elapsed="0.199005"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-09-12T12:45:54.130115" elapsed="0.000175"/>
</return>
<msg time="2025-09-12T12:45:54.130721" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>${TOKEN_ADMIN}</arg>
<arg>${payload}</arg>
<status status="PASS" start="2025-09-12T12:45:53.929932" elapsed="0.200848"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:54.131895" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-09-12T12:45:54.131289" elapsed="0.000884"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:53.929448" elapsed="0.202859"/>
</kw>
<kw name="THEN a API deve retornar um erro de produto duplicado com status 400">
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T12:45:54.133742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T12:45:54.133167" elapsed="0.000639"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response.json()["message"]}</arg>
<arg>Já existe produto com esse nome</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-09-12T12:45:54.133929" elapsed="0.000443"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:54.132742" elapsed="0.001689"/>
</kw>
<kw name="Deletar Produto Criado Se Existir" type="TEARDOWN">
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="DELETE Produto por ID" owner="api_keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T12:45:54.136312" level="INFO">&amp;{header} = { Content-Type=application/json | Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNoYXduOTNAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6IiZnMCs3NEZqIiwiaWF0IjoxNzU3NjkxOTUzLCJleHAiOjE3NTc2...</msg>
<var>&amp;{header}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=${token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T12:45:54.136042" elapsed="0.000303"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-09-12T12:45:54.316124" level="INFO">DELETE Request : url=https://serverest.dev/produtos/okCEjNHJvgCcMna6 
 path_url=/produtos/okCEjNHJvgCcMna6 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNoYXduOTNAZXhhbXBsZS5jb20iLCJwYXNzd29yZCI6IiZnMCs3NEZqIiwiaWF0IjoxNzU3NjkxOTUzLCJleHAiOjE3NTc2OTI1NTN9.uSxu4NGr_MUA57EFArvt4Rwll6oammRimMTRqANGJKE', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-09-12T12:45:54.316435" level="INFO">DELETE Response : url=https://serverest.dev/produtos/okCEjNHJvgCcMna6 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '00a2e5620b8cf0671ad9fa0f81fd8c43', 'date': 'Fri, 12 Sep 2025 15:45:54 GMT', 'server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg time="2025-09-12T12:45:54.316628" level="INFO">/Users/mario/Library/Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2025-09-12T12:45:54.317004" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos/${id_produto}</arg>
<arg>headers=&amp;{header}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T12:45:54.136625" elapsed="0.180449"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-09-12T12:45:54.317318" elapsed="0.000184"/>
</return>
<arg>${TOKEN_ADMIN}</arg>
<arg>${ID_PRODUTO}</arg>
<status status="PASS" start="2025-09-12T12:45:54.135377" elapsed="0.182499"/>
</kw>
<arg>'${ID_PRODUTO}' != '${null}'</arg>
<arg>DELETE Produto por ID</arg>
<arg>${TOKEN_ADMIN}</arg>
<arg>${ID_PRODUTO}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2025-09-12T12:45:54.135009" elapsed="0.182987"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:54.319290" level="INFO">${ID_PRODUTO} = None</msg>
<arg>${ID_PRODUTO}</arg>
<arg>${null}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-09-12T12:45:54.318592" elapsed="0.000786"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:54.134693" elapsed="0.184815"/>
</kw>
<tag>sad_path</tag>
<tag>TC03</tag>
<tag>US003</tag>
<status status="PASS" start="2025-09-12T12:45:53.736427" elapsed="0.583292"/>
</test>
<doc>Cenários de teste para o endpoint /produtos, cobrindo a User Story US003.</doc>
<status status="PASS" start="2025-09-12T12:45:52.378581" elapsed="1.941621"/>
</suite>
<status status="PASS" start="2025-09-12T12:45:52.377268" elapsed="1.943718"/>
</suite>
<suite id="s1-s3" name="Usuarios" source="/Users/mario/Documents/GitHub/Compass/ServeRestRobot/tests/usuarios">
<suite id="s1-s3-s1" name="Usuarios Test" source="/Users/mario/Documents/GitHub/Compass/ServeRestRobot/tests/usuarios/usuarios_test.robot">
<kw name="Iniciar Sessao e Criar Usuario Base" type="SETUP">
<kw name="Iniciar Sessao" owner="config">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-09-12T12:45:54.329843" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>serverest</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-09-12T12:45:54.329668" elapsed="0.000370"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:54.328166" elapsed="0.001950"/>
</kw>
<kw name="Criar Usuario Valido" owner="dynamics">
<kw name="First Name" owner="FakerLibrary">
<msg time="2025-09-12T12:45:54.330740" level="INFO">${nome} = Richard</msg>
<var>${nome}</var>
<status status="PASS" start="2025-09-12T12:45:54.330496" elapsed="0.000270"/>
</kw>
<kw name="Email" owner="FakerLibrary">
<msg time="2025-09-12T12:45:54.331559" level="INFO">${email} = jonathan35@example.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-09-12T12:45:54.331068" elapsed="0.000544"/>
</kw>
<kw name="Password" owner="FakerLibrary">
<msg time="2025-09-12T12:45:54.332187" level="INFO">${senha} = k^7FeV+z</msg>
<var>${senha}</var>
<arg>length=8</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="PASS" start="2025-09-12T12:45:54.331813" elapsed="0.000406"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T12:45:54.332831" level="INFO">&amp;{payload} = { nome=Richard | email=jonathan35@example.com | password=k^7FeV+z | administrador=false }</msg>
<var>&amp;{payload}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${admin}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T12:45:54.332370" elapsed="0.000498"/>
</kw>
<return>
<value>&amp;{payload}</value>
<status status="PASS" start="2025-09-12T12:45:54.332937" elapsed="0.000041"/>
</return>
<msg time="2025-09-12T12:45:54.333155" level="INFO">&amp;{payload_base} = { nome=Richard | email=jonathan35@example.com | password=k^7FeV+z | administrador=false }</msg>
<var>&amp;{payload_base}</var>
<status status="PASS" start="2025-09-12T12:45:54.330288" elapsed="0.002893"/>
</kw>
<kw name="POST Usuario" owner="api_keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T12:45:54.333797" level="INFO">&amp;{header} = { Content-Type=application/json }</msg>
<var>&amp;{header}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T12:45:54.333639" elapsed="0.000246"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T12:45:54.829459" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '104'} 
 body=b'{"nome": "Richard", "email": "jonathan35@example.com", "password": "k^7FeV+z", "administrador": "false"}' 
 </msg>
<msg time="2025-09-12T12:45:54.829682" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '9092b86c1835e41c0de914588dfa5bad', 'date': 'Fri, 12 Sep 2025 15:45:54 GMT', 'server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "tuy7CYSh84lGwQjL"
} 
 </msg>
<msg time="2025-09-12T12:45:54.829845" level="INFO">/Users/mario/Library/Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2025-09-12T12:45:54.830116" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>headers=&amp;{header}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T12:45:54.333988" elapsed="0.496172"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-09-12T12:45:54.830408" elapsed="0.000167"/>
</return>
<msg time="2025-09-12T12:45:54.830976" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>&amp;{payload_base}</arg>
<status status="PASS" start="2025-09-12T12:45:54.333358" elapsed="0.497672"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:54.833420" level="INFO">${ID_USUARIO_BASE} = tuy7CYSh84lGwQjL</msg>
<arg>${ID_USUARIO_BASE}</arg>
<arg>${response.json()["_id"]}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-09-12T12:45:54.831545" elapsed="0.001930"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:54.834400" level="INFO">${EMAIL_BASE} = jonathan35@example.com</msg>
<arg>${EMAIL_BASE}</arg>
<arg>${payload_base["email"]}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-09-12T12:45:54.833639" elapsed="0.000797"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:54.327908" elapsed="0.506594"/>
</kw>
<test id="s1-s3-s1-t1" name="US001-TC01: Cadastrar usuário não administrador com dados válidos" line="10">
<kw name="GIVEN que eu tenha os dados de um novo usuário">
<kw name="Criar Usuario Valido" owner="dynamics">
<kw name="First Name" owner="FakerLibrary">
<msg time="2025-09-12T12:45:54.836645" level="INFO">${nome} = Stacey</msg>
<var>${nome}</var>
<status status="PASS" start="2025-09-12T12:45:54.836280" elapsed="0.000411"/>
</kw>
<kw name="Email" owner="FakerLibrary">
<msg time="2025-09-12T12:45:54.837230" level="INFO">${email} = reedwilliam@example.net</msg>
<var>${email}</var>
<status status="PASS" start="2025-09-12T12:45:54.836843" elapsed="0.000413"/>
</kw>
<kw name="Password" owner="FakerLibrary">
<msg time="2025-09-12T12:45:54.837621" level="INFO">${senha} = +4*GuwRe</msg>
<var>${senha}</var>
<arg>length=8</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="PASS" start="2025-09-12T12:45:54.837368" elapsed="0.000278"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T12:45:54.838155" level="INFO">&amp;{payload} = { nome=Stacey | email=reedwilliam@example.net | password=+4*GuwRe | administrador=false }</msg>
<var>&amp;{payload}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${admin}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T12:45:54.837778" elapsed="0.000404"/>
</kw>
<return>
<value>&amp;{payload}</value>
<status status="PASS" start="2025-09-12T12:45:54.838240" elapsed="0.000039"/>
</return>
<msg time="2025-09-12T12:45:54.838444" level="INFO">&amp;{payload} = { nome=Stacey | email=reedwilliam@example.net | password=+4*GuwRe | administrador=false }</msg>
<var>&amp;{payload}</var>
<status status="PASS" start="2025-09-12T12:45:54.835949" elapsed="0.002521"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:54.838876" level="INFO">${payload} = {'nome': 'Stacey', 'email': 'reedwilliam@example.net', 'password': '+4*GuwRe', 'administrador': 'false'}</msg>
<arg>${payload}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-09-12T12:45:54.838657" elapsed="0.000266"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:54.835482" elapsed="0.003497"/>
</kw>
<kw name="WHEN eu envio uma requisição POST para /usuarios">
<kw name="POST Usuario" owner="api_keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T12:45:54.840268" level="INFO">&amp;{header} = { Content-Type=application/json }</msg>
<var>&amp;{header}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T12:45:54.839821" elapsed="0.000480"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T12:45:55.029312" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '104'} 
 body=b'{"nome": "Stacey", "email": "reedwilliam@example.net", "password": "+4*GuwRe", "administrador": "false"}' 
 </msg>
<msg time="2025-09-12T12:45:55.029628" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '6e38b18dcd345efd0de914588dfa5f38', 'date': 'Fri, 12 Sep 2025 15:45:54 GMT', 'server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "NddwBKsRpgl4yPw0"
} 
 </msg>
<msg time="2025-09-12T12:45:55.029850" level="INFO">/Users/mario/Library/Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2025-09-12T12:45:55.030230" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>headers=&amp;{header}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T12:45:54.840420" elapsed="0.189873"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-09-12T12:45:55.030675" elapsed="0.000141"/>
</return>
<msg time="2025-09-12T12:45:55.031247" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>&amp;{payload}</arg>
<status status="PASS" start="2025-09-12T12:45:54.839490" elapsed="0.191812"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:55.032300" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-09-12T12:45:55.031901" elapsed="0.000457"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:54.839190" elapsed="0.193241"/>
</kw>
<kw name="THEN o usuário deve ser criado com sucesso e status 201">
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T12:45:55.033974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T12:45:55.033292" elapsed="0.000753"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response.json()["message"]}</arg>
<arg>Cadastro realizado com sucesso</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-09-12T12:45:55.034188" elapsed="0.000513"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:55.035292" level="INFO">${id_criado} = NddwBKsRpgl4yPw0</msg>
<var>${id_criado}</var>
<arg>${response.json()["_id"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T12:45:55.034834" elapsed="0.000485"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="DELETE Usuario por ID" owner="api_keywords">
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-09-12T12:45:55.207566" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/NddwBKsRpgl4yPw0 
 path_url=/usuarios/NddwBKsRpgl4yPw0 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-09-12T12:45:55.207871" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/NddwBKsRpgl4yPw0 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '76126efb4e78316e0de914588dfa58c5', 'date': 'Fri, 12 Sep 2025 15:45:55 GMT', 'server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg time="2025-09-12T12:45:55.208066" level="INFO">/Users/mario/Library/Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2025-09-12T12:45:55.208447" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T12:45:55.036109" elapsed="0.172408"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-09-12T12:45:55.208756" elapsed="0.000160"/>
</return>
<arg>${id_criado}</arg>
<status status="PASS" start="2025-09-12T12:45:55.035740" elapsed="0.173539"/>
</kw>
<arg>DELETE Usuario por ID</arg>
<arg>${id_criado}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2025-09-12T12:45:55.035470" elapsed="0.173924"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:55.032831" elapsed="0.176699"/>
</kw>
<tag>happy_path</tag>
<tag>TC01</tag>
<tag>US001</tag>
<status status="PASS" start="2025-09-12T12:45:54.834626" elapsed="0.375304"/>
</test>
<test id="s1-s3-s1-t2" name="US001-TC02: Tentar cadastrar um usuário com e-mail já existente" line="16">
<kw name="GIVEN que eu tenha um usuário já cadastrado">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-12T12:45:55.213071" level="INFO">Usando usuário base com ID: tuy7CYSh84lGwQjL</msg>
<arg>Usando usuário base com ID: ${ID_USUARIO_BASE}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-12T12:45:55.212698" elapsed="0.000487"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:55.211876" elapsed="0.001431"/>
</kw>
<kw name="WHEN eu tento cadastrar um novo usuário com o mesmo e-mail">
<kw name="Criar Usuario Valido" owner="dynamics">
<kw name="First Name" owner="FakerLibrary">
<msg time="2025-09-12T12:45:55.214762" level="INFO">${nome} = Robert</msg>
<var>${nome}</var>
<status status="PASS" start="2025-09-12T12:45:55.214428" elapsed="0.000367"/>
</kw>
<kw name="Email" owner="FakerLibrary">
<msg time="2025-09-12T12:45:55.215208" level="INFO">${email} = jane96@example.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-09-12T12:45:55.214915" elapsed="0.000318"/>
</kw>
<kw name="Password" owner="FakerLibrary">
<msg time="2025-09-12T12:45:55.215632" level="INFO">${senha} = P&amp;(2AXBs</msg>
<var>${senha}</var>
<arg>length=8</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="PASS" start="2025-09-12T12:45:55.215339" elapsed="0.000319"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T12:45:55.216182" level="INFO">&amp;{payload} = { nome=Robert | email=jane96@example.com | password=P&amp;(2AXBs | administrador=false }</msg>
<var>&amp;{payload}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${admin}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T12:45:55.215804" elapsed="0.000402"/>
</kw>
<return>
<value>&amp;{payload}</value>
<status status="PASS" start="2025-09-12T12:45:55.216257" elapsed="0.000039"/>
</return>
<msg time="2025-09-12T12:45:55.216449" level="INFO">&amp;{payload_duplicado} = { nome=Robert | email=jane96@example.com | password=P&amp;(2AXBs | administrador=false }</msg>
<var>&amp;{payload_duplicado}</var>
<status status="PASS" start="2025-09-12T12:45:55.213983" elapsed="0.002488"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${payload_duplicado}</arg>
<arg>email=${EMAIL_BASE}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T12:45:55.216592" elapsed="0.000177"/>
</kw>
<kw name="POST Usuario" owner="api_keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T12:45:55.218186" level="INFO">&amp;{header} = { Content-Type=application/json }</msg>
<var>&amp;{header}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T12:45:55.217235" elapsed="0.001026"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-09-12T12:45:55.409795" level="INFO">POST Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '103'} 
 body=b'{"nome": "Robert", "email": "jonathan35@example.com", "password": "P&amp;(2AXBs", "administrador": "false"}' 
 </msg>
<msg time="2025-09-12T12:45:55.410243" level="INFO">POST Response : url=https://serverest.dev/usuarios 
 status=400, reason=Bad Request 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '0079c28fe7c714da0de914588dfa5957', 'date': 'Fri, 12 Sep 2025 15:45:55 GMT', 'server': 'Google Frontend', 'Content-Length': '53'} 
 body={
    "message": "Este email já está sendo usado"
} 
 </msg>
<msg time="2025-09-12T12:45:55.410471" level="INFO">/Users/mario/Library/Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2025-09-12T12:45:55.410831" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>json=${payload}</arg>
<arg>headers=&amp;{header}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T12:45:55.218518" elapsed="0.192377"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-09-12T12:45:55.411130" elapsed="0.000125"/>
</return>
<msg time="2025-09-12T12:45:55.411540" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>&amp;{payload_duplicado}</arg>
<status status="PASS" start="2025-09-12T12:45:55.216930" elapsed="0.194643"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:55.412370" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-09-12T12:45:55.411986" elapsed="0.000443"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:55.213554" elapsed="0.198955"/>
</kw>
<kw name="THEN a API deve retornar um erro de e-mail duplicado com status 400">
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T12:45:55.413942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>400</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T12:45:55.413309" elapsed="0.000709"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response.json()["message"]}</arg>
<arg>Este email já está sendo usado</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-09-12T12:45:55.414172" elapsed="0.000497"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:55.412898" elapsed="0.001840"/>
</kw>
<tag>sad_path</tag>
<tag>TC02</tag>
<tag>US001</tag>
<status status="PASS" start="2025-09-12T12:45:55.210505" elapsed="0.204427"/>
</test>
<test id="s1-s3-s1-t3" name="US001-TC06: Listar todos os usuários cadastrados" line="22">
<kw name="WHEN eu envio uma requisição GET para /usuarios">
<kw name="GET Usuarios" owner="api_keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T12:45:55.416808" level="INFO">&amp;{header} = { Content-Type=application/json }</msg>
<var>&amp;{header}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T12:45:55.416551" elapsed="0.000302"/>
</kw>
<if>
<branch type="IF" condition="'${token}' != '${null}'">
<kw name="Set To Dictionary" owner="Collections">
<arg>${header}</arg>
<arg>Authorization=${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" start="2025-09-12T12:45:55.417225" elapsed="0.000028"/>
</kw>
<status status="NOT RUN" start="2025-09-12T12:45:55.416957" elapsed="0.000341"/>
</branch>
<status status="PASS" start="2025-09-12T12:45:55.416926" elapsed="0.000407"/>
</if>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-09-12T12:45:55.641295" level="INFO">GET Request : url=https://serverest.dev/usuarios 
 path_url=/usuarios 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
 body=None 
 </msg>
<msg time="2025-09-12T12:45:55.641636" level="INFO">GET Response : url=https://serverest.dev/usuarios 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': 'ca56d367c4246b970de914588dfa5bdf', 'date': 'Fri, 12 Sep 2025 15:45:55 GMT', 'server': 'Google Frontend', 'Content-Length': '19311'} 
 body={
    "quantidade": 83,
    "usuarios": [
        {
            "nome": "Lucas Silva",
            "email": "lucas1757683864789@gmail.com",
            "password": "123456",
            "administrador": "true",
            "_id": "0KuP2PJQPNADdKs3"
        },
        {
            "nome": "Yrvin Pachas Saravia",
            "email": "yrvin+368830f6-c923-4da3-91da-e3406e84e450@gmail.com",
            "password": "testerQA",
            "administrador": "true",
            "_id": "0rQGaXVldR38BMJR"
        },
        {
            "nome": "Fulano da Silva",
            "email": "fulano@qa.com",
            "password": "teste",
            "administrador": "true",
            "_id": "0uxuPY0cbmQhpEz1"
        },
        {
            "nome": "Craig",
            "email": "shawn93@example.com",
            "password": "&amp;g0+74Fj",
            "administrador": "true",
            "_id": "17RAuj7zScs82Ict"
        },
        {
            "nome": "João Paulo",
            "email": "joaopaulodevia@gmail.com",
            "password": "123456",
            "administrador": "false",
            "_id": "19wxsD7j8GVPelau"
        },
        {
            "nome": "Yrvin Pachas Saravia",
            "email": "yrvin+b3e56352-8453-4049-a61e-2b2625d381ce@gmail.com",
            "password": "testerQA",
            "administrador": "true",
            "_id": "2zgNr2Nlklovfwr3"
        },
        {
            "nome": "Yrvin Pachas Saravia",
            "email": "yrvin+712affe8-61f7-49b8-88d3-e953afa94657@gmail.com",
            "password": "testerQA",
            "administrador": "true",
            "_id": "3itZRw72TjqudJDT"
        },
        {
            "nome": "Ícaro Cau",
            "email": "icaro1757685627984@gmail.com",
            "password": "123456",
            "administrador": "true",
            "_id": "4JzzmatYqreX2hxj"
        },
        {
            "nome": "Yrvin Pachas Saravia",
            "email": "yrvin+a67e8f74-281a-464a-944b-2c3d31e672a8@gmail.com",
            "password": "testerQA",
            "administrador": "true",
            "_id": "5sQn2mw5IQb5uLWe"
        },
        {
            "nome": "Yrvin Pachas Saravia",
            "email": "yrvin+cf41d7d3-c974-4d87-b839-74935927b504@gmail.com",
            "password": "testerQA",
            "administrador": "true",
            "_id": "6eoaPbBxQArv4HPN"
        },
        {
            "nome": "NuevoNombre",
            "email": "pardito@gmail.com",
            "password": "nuevoPass123",
            "administrador": "false",
            "_id": "6zTyLzisIzcr6ePR"
        },
        {
            "nome": "Lucas Silva",
            "email": "lucas1757684421034@gmail.com",
            "password": "123456",
            "administrador": "true",
            "_id": "7VKrWE7fAfaQH9r4"
        },
        {
            "nome": "Abc MDH",
            "email": "ahsgagsags@qa.com.br",
            "password": "teste456",
            "administrador": "true",
            "_id": "7my51npMFALYeRtl"
        },
        {
            "nome": "Yrvin Pachas Saravia",
            "email": "yrvin+b1209d90-8de3-4373-bd61-dc8aee0cd8b3@gmail.com",
            "password": "testerQA",
            "administrador": "true",
            "_id": "803UNszXlLVTlYg8"
        },
        {
            "nome": "Yrvin put",
            "email": "yrvin+162d108a-94a1-4dfe-9b7c-ed4469f20df6@gmail.com",
            "password": "nuevo",
            "administrador": "false",
            "_id": "90gtABnHHnxrIg5B"
        },
        {
            "nome": "Ícaro Cau",
            "email": "icaro1757683299973@gmail.com",
            "password": "123456",
            "administrador": "true",
            "_id": "955w1iADu5Rk51gN"
        },
        {
            "nome": "Yrvin Pachas Saravia",
            "email": "yrvin+b90b10b4-6c17-4694-8c7a-31e65748d333@gmail.com",
            "password": "testerQA",
            "administrador": "true",
            "_id": "9Q9Q9M7en4cV1sbj"
        },
        {
            "nome": "Sandro Huamán Mendoza",
            "email": "sandro+7ec12258-9f0e-4b9c-81fc-c7ce7edeb4c7@gmail.com",
            "password": "testerQA",
            "administrador": "true",
            "_id": "9vi3Bl1jlacBxG1G"
        },
        {
            "nome": "Sandro Huamán Mendoza",
            "email": "sandro+1d1a9ab1-1838-47b2-8ad0-f92c5aa5a595@gmail.com",
            "password": "testerQA",
            "administrador": "true",
            "_id": "AW8iXOLUwDiutF6O"
        },
        {
            "nome": "Ícaro Cau",
            "email": "icaro1757685624912@gmail.com",
            "password": "123456",
            "administrador": "true",
            "_id": "Cv5fey9nYHNaRI29"
        },
        {
            "nome": "Lucas Silva",
            "email": "lucas1757684017267@gmail.com",
            "password": "123456",
            "administrador": "true",
            "_id": "CyOxtr4IORWlXvOu"
        },
        {
            "nome": "Usuário Teste",
            "email": "user1757683754467@teste.com",
            "password": "123456",
            "administrador": "false",
            "_id": "DR3yGjQJTgXXPooK"
        },
        {
            "nome": "Yrvin put",
            "email": "yrvin+d609b105-2e98-4cb2-a798-d658f2f8543a@gmail.com",
            "password": "nuevo",
            "administrador": "false",
            "_id": "DvXmZYeJc6L65J9H"
        },
        {
            "nome": "Lucas Silva",
            "email": "lucas1757684004483@gmail.com",
            "password": "123456",
            "administrador": "true",
            "_id": "ECCjlfq7djcZ5L94"
        },
        {
            "nome": "Yrvin put",
            "email": "yrvin+f9e483cd-cb12-44d2-851c-36f80aed2401@gmail.com",
            "password": "nuevo",
            "administrador": "false",
            "_id": "ElBN4LInXxxgemcF"
        },
        {
            "nome": "Ícaro Cau",
            "email": "icaro1757687275647@gmail.com",
            "password": "123456",
            "administrador": "true",
            "_id": "ExnXmKPb3XFonh7E"
        },
        {
            "nome": "Yrvin Pachas Saravia",
            "email": "yrvin+16780429-d407-4c8f-99a9-a1e15b73df7b@gmail.com",
            "password": "testerQA",
            "administrador": "true",
            "_id": "FkrJrRttnS8WY13R"
        },
        {
            "nome": "Ícaro Cau",
            "email": "icaro1757685620603@gmail.com",
            "password": "123456",
            "administrador": "true",
            "_id": "GoPFJltzlKzXMGVX"
        },
        {
            "nome": "Sandro Huamán Mendoza",
            "email": "sandro+d4e32eea-635f-4eea-8e82-be5795eaae68@gmail.com",
            "password": "testerQA",
            "administrador": "true",
            "_id": "HxYyeuxDNjWngDss"
        },
        {
            "nome": "Usuario Comum",
            "email": "usuario.teste@email.com",
            "password": "teste123",
            "administrador": "false",
            "_id": "I6Wj7A2AR8IBCJ9z"
        },
        {
            "nome": "ícaro cau",
            "email": "icaro1757684075542@gmail.com",
            "password": "123456",
            "administrador": "true",
            "_id": "J0wzlcCxPk1tzxMk"
        },
        {
            "nome": "Sandro Huaman ",
            "email": "sandroingsistemas30@gmail.com",
            "password": "123456",
            "administrador": "true",
            "_id": "JUiOq9fDpPjeEjJ6"
        },
        {
            "nome": "Ícaro Cau",
            "email": "icaro1757685602978@gmail.com",
            "password": "123456",
            "administrador": "true",
            "_id": "Jon7QyFY6911oXFI"
        },
        {
            "nome": "Yrvin Pachas Saravia",
            "email": "yrvin+bcf03d8c-f7eb-4db5-b17e-d05efdc6fdb4@gmail.com",
            "password": "testerQA",
            "administrador": "true",
            "_id": "KGyhO6xzIpCVuntm"
        },
        {
            "nome": "Ícaro Cau",
            "email": "icaro1757684466106@gmail.com",
            "password": "123456",
            "administrador": "true",
            "_id": "LYklndHHaMzMho5Z"
        },
        {
            "nome": "Yrvin put",
            "email": "yrvin+3e7295cf-b7a0-4f50-831d-ad107fcb88a0@gmail.com",
            "password": "nuevo",
            "administrador": "false",
            "_id": "MUEGDHQ1vKF7pCqC"
        },
        {
            "nome": "Sandro Huamán Mendoza",
            "email": "sandro+a5933fde-b92d-4d70-8fcf-289fde8e60b7@gmail.com",
            "password": "testerQA",
            "administrador": "true",
            "_id": "NxVFS8Yuc8R0dIMc"
        },
        {
            "nome": "Sandro Huamán Mendoza",
            "email": "sandro+f87317ae-a725-4a36-b0e0-a7d64ac37116@gmail.com",
            "password": "testerQA",
            "administrador": "true",
            "_id": "OhJH5y83yQ2v9B7E"
        },
        {
            "nome": "Lisa",
            "email": "toddknight@example.org",
            "password": "Cu@1SUgh",
            "administrador": "true",
            "_id": "P4O3p1eWTxRl56BW"
        },
        {
            "nome": "Ícaro Cau",
            "email": "icaro1757683268930@gmail.com",
            "password": "123456",
            "administrador": "true",
            "_id": "PRolIy1GH8RdTZgR"
        },
        {
            "nome": "Yrvin Pachas ",
            "email": "yrvin21pachas2004@gmail.com",
            "password": "123456",
            "administrador": "true",
            "_id": "QqzrqquktUe4giB5"
        },
        {
            "nome": "ícaro cau",
            "email": "icaro1757684173383@gmail.com",
            "password": "123456",
            "administrador": "true",
            "_id": "R0L0gHHJXjKhWKms"
        },
        {
            "nome": "Yrvin Pachas Saravia",
            "email": "yrvin+df333a7b-d464-4a83-b0e5-749659934db7@gmail.com",
            "password": "testerQA",
            "administrador": "true",
            "_id": "RDUgyCkY5eUz2Bow"
        },
        {
            "nome"... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg time="2025-09-12T12:45:55.642167" level="INFO">/Users/mario/Library/Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2025-09-12T12:45:55.642538" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios</arg>
<arg>headers=&amp;{header}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T12:45:55.417451" elapsed="0.225157"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-09-12T12:45:55.642835" elapsed="0.000122"/>
</return>
<msg time="2025-09-12T12:45:55.643226" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<status status="PASS" start="2025-09-12T12:45:55.416199" elapsed="0.227058"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:55.643957" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-09-12T12:45:55.643605" elapsed="0.000408"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:55.415791" elapsed="0.228299"/>
</kw>
<kw name="THEN a API deve retornar a lista de usuários com status 200">
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T12:45:55.645436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T12:45:55.644848" elapsed="0.000660"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-09-12T12:45:55.646212" level="INFO">Length is 83.</msg>
<arg>${response.json()["usuarios"]}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-09-12T12:45:55.645645" elapsed="0.000624"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:55.644434" elapsed="0.001895"/>
</kw>
<tag>happy_path</tag>
<tag>TC06</tag>
<tag>US001</tag>
<status status="PASS" start="2025-09-12T12:45:55.415216" elapsed="0.231300"/>
</test>
<test id="s1-s3-s1-t4" name="US001-TC09: Atualizar um usuário existente com dados válidos" line="27">
<kw name="GIVEN que eu tenha um usuário já cadastrado">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-12T12:45:55.647762" level="INFO">Usando usuário base com ID: tuy7CYSh84lGwQjL</msg>
<arg>Usando usuário base com ID: ${ID_USUARIO_BASE}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-12T12:45:55.647618" elapsed="0.000194"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:55.647348" elapsed="0.000520"/>
</kw>
<kw name="WHEN eu envio uma requisição PUT para atualizar o usuário com dados válidos">
<kw name="Criar Usuario Valido" owner="dynamics">
<kw name="First Name" owner="FakerLibrary">
<msg time="2025-09-12T12:45:55.649049" level="INFO">${nome} = Heather</msg>
<var>${nome}</var>
<status status="PASS" start="2025-09-12T12:45:55.648754" elapsed="0.000326"/>
</kw>
<kw name="Email" owner="FakerLibrary">
<msg time="2025-09-12T12:45:55.650009" level="INFO">${email} = kingtami@example.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-09-12T12:45:55.649197" elapsed="0.000844"/>
</kw>
<kw name="Password" owner="FakerLibrary">
<msg time="2025-09-12T12:45:55.650492" level="INFO">${senha} = 8^%A1#Qk</msg>
<var>${senha}</var>
<arg>length=8</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="PASS" start="2025-09-12T12:45:55.650180" elapsed="0.000341"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T12:45:55.651127" level="INFO">&amp;{payload} = { nome=Heather | email=kingtami@example.com | password=8^%A1#Qk | administrador=true }</msg>
<var>&amp;{payload}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${admin}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T12:45:55.650676" elapsed="0.000482"/>
</kw>
<return>
<value>&amp;{payload}</value>
<status status="PASS" start="2025-09-12T12:45:55.651224" elapsed="0.000050"/>
</return>
<msg time="2025-09-12T12:45:55.651461" level="INFO">&amp;{payload_update} = { nome=Heather | email=kingtami@example.com | password=8^%A1#Qk | administrador=true }</msg>
<var>&amp;{payload_update}</var>
<arg>admin=true</arg>
<status status="PASS" start="2025-09-12T12:45:55.648383" elapsed="0.003105"/>
</kw>
<kw name="PUT Usuario por ID" owner="api_keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T12:45:55.652306" level="INFO">&amp;{header} = { Content-Type=application/json }</msg>
<var>&amp;{header}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T12:45:55.652109" elapsed="0.000227"/>
</kw>
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2025-09-12T12:45:55.844494" level="INFO">PUT Request : url=https://serverest.dev/usuarios/tuy7CYSh84lGwQjL 
 path_url=/usuarios/tuy7CYSh84lGwQjL 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '101'} 
 body=b'{"nome": "Heather", "email": "kingtami@example.com", "password": "8^%A1#Qk", "administrador": "true"}' 
 </msg>
<msg time="2025-09-12T12:45:55.844689" level="INFO">PUT Response : url=https://serverest.dev/usuarios/tuy7CYSh84lGwQjL 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '7349396e319a97020de914588dfa555c', 'date': 'Fri, 12 Sep 2025 15:45:55 GMT', 'server': 'Google Frontend', 'Content-Length': '50'} 
 body={
    "message": "Registro alterado com sucesso"
} 
 </msg>
<msg time="2025-09-12T12:45:55.844836" level="INFO">/Users/mario/Library/Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2025-09-12T12:45:55.845115" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>json=${payload}</arg>
<arg>headers=&amp;{header}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T12:45:55.652468" elapsed="0.192695"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-09-12T12:45:55.845332" elapsed="0.000105"/>
</return>
<msg time="2025-09-12T12:45:55.845692" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>${ID_USUARIO_BASE}</arg>
<arg>&amp;{payload_update}</arg>
<status status="PASS" start="2025-09-12T12:45:55.651679" elapsed="0.194039"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:55.846316" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-09-12T12:45:55.846038" elapsed="0.000325"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:55.648037" elapsed="0.198393"/>
</kw>
<kw name="THEN o usuário deve ser atualizado com sucesso e status 200">
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T12:45:55.847827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T12:45:55.847204" elapsed="0.000709"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response.json()["message"]}</arg>
<arg>Registro alterado com sucesso</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-09-12T12:45:55.848073" elapsed="0.000509"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:55.846718" elapsed="0.001935"/>
</kw>
<tag>happy_path</tag>
<tag>TC09</tag>
<tag>US001</tag>
<status status="PASS" start="2025-09-12T12:45:55.646789" elapsed="0.202052"/>
</test>
<test id="s1-s3-s1-t5" name="US001-TC10: Atualizar (PUT) um usuário informando um ID inexistente (deve criar um novo)" line="33">
<kw name="GIVEN que eu tenha os dados de um novo usuário">
<kw name="Criar Usuario Valido" owner="dynamics">
<kw name="First Name" owner="FakerLibrary">
<msg time="2025-09-12T12:45:55.850422" level="INFO">${nome} = Jennifer</msg>
<var>${nome}</var>
<status status="PASS" start="2025-09-12T12:45:55.850165" elapsed="0.000289"/>
</kw>
<kw name="Email" owner="FakerLibrary">
<msg time="2025-09-12T12:45:55.850933" level="INFO">${email} = cortezkathleen@example.com</msg>
<var>${email}</var>
<status status="PASS" start="2025-09-12T12:45:55.850565" elapsed="0.000400"/>
</kw>
<kw name="Password" owner="FakerLibrary">
<msg time="2025-09-12T12:45:55.851426" level="INFO">${senha} = p^1QrlbP</msg>
<var>${senha}</var>
<arg>length=8</arg>
<doc>Generate a random password of the specified ``length``.</doc>
<status status="PASS" start="2025-09-12T12:45:55.851111" elapsed="0.000346"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T12:45:55.852040" level="INFO">&amp;{payload} = { nome=Jennifer | email=cortezkathleen@example.com | password=p^1QrlbP | administrador=false }</msg>
<var>&amp;{payload}</var>
<arg>nome=${nome}</arg>
<arg>email=${email}</arg>
<arg>password=${senha}</arg>
<arg>administrador=${admin}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T12:45:55.851620" elapsed="0.000448"/>
</kw>
<return>
<value>&amp;{payload}</value>
<status status="PASS" start="2025-09-12T12:45:55.852134" elapsed="0.000057"/>
</return>
<msg time="2025-09-12T12:45:55.852387" level="INFO">&amp;{payload} = { nome=Jennifer | email=cortezkathleen@example.com | password=p^1QrlbP | administrador=false }</msg>
<var>&amp;{payload}</var>
<status status="PASS" start="2025-09-12T12:45:55.849878" elapsed="0.002539"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:55.852796" level="INFO">${payload} = {'nome': 'Jennifer', 'email': 'cortezkathleen@example.com', 'password': 'p^1QrlbP', 'administrador': 'false'}</msg>
<arg>${payload}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-09-12T12:45:55.852570" elapsed="0.000271"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:55.849548" elapsed="0.003354"/>
</kw>
<kw name="WHEN eu envio uma requisição PUT para atualizar um usuário com ID inexistente">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:55.853656" level="INFO">${id_inexistente} = id_inexistente_12345</msg>
<var>${id_inexistente}</var>
<arg>id_inexistente_12345</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-09-12T12:45:55.853502" elapsed="0.000184"/>
</kw>
<kw name="PUT Usuario por ID" owner="api_keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-09-12T12:45:55.854497" level="INFO">&amp;{header} = { Content-Type=application/json }</msg>
<var>&amp;{header}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-09-12T12:45:55.854317" elapsed="0.000204"/>
</kw>
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2025-09-12T12:45:56.047189" level="INFO">PUT Request : url=https://serverest.dev/usuarios/id_inexistente_12345 
 path_url=/usuarios/id_inexistente_12345 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '109'} 
 body=b'{"nome": "Jennifer", "email": "cortezkathleen@example.com", "password": "p^1QrlbP", "administrador": "false"}' 
 </msg>
<msg time="2025-09-12T12:45:56.047475" level="INFO">PUT Response : url=https://serverest.dev/usuarios/id_inexistente_12345 
 status=201, reason=Created 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '4cbadade3785142f0de914588dfa5732', 'date': 'Fri, 12 Sep 2025 15:45:55 GMT', 'server': 'Google Frontend', 'Content-Length': '82'} 
 body={
    "message": "Cadastro realizado com sucesso",
    "_id": "XvqSKXY1h1LbgdSH"
} 
 </msg>
<msg time="2025-09-12T12:45:56.047639" level="INFO">/Users/mario/Library/Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2025-09-12T12:45:56.047931" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>json=${payload}</arg>
<arg>headers=&amp;{header}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T12:45:55.854632" elapsed="0.193344"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-09-12T12:45:56.048182" elapsed="0.000150"/>
</return>
<msg time="2025-09-12T12:45:56.048638" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>${id_inexistente}</arg>
<arg>&amp;{payload}</arg>
<status status="PASS" start="2025-09-12T12:45:55.853889" elapsed="0.194786"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:56.049503" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-09-12T12:45:56.049128" elapsed="0.000424"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:56.050888" level="INFO">${ID_USUARIO_SECUNDARIO} = XvqSKXY1h1LbgdSH</msg>
<arg>${ID_USUARIO_SECUNDARIO}</arg>
<arg>${response.json()["_id"]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-09-12T12:45:56.049686" elapsed="0.001250"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:55.853160" elapsed="0.197860"/>
</kw>
<kw name="THEN a API deve criar um novo usuário com sucesso e status 201">
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T12:45:56.052958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T12:45:56.052410" elapsed="0.000620"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response.json()["message"]}</arg>
<arg>Cadastro realizado com sucesso</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-09-12T12:45:56.053167" elapsed="0.000478"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${response.json()}</arg>
<arg>_id</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" start="2025-09-12T12:45:56.053906" elapsed="0.000572"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:56.051411" elapsed="0.003145"/>
</kw>
<kw name="Remover Usuario Secundario" type="TEARDOWN">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="DELETE Usuario por ID" owner="api_keywords">
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-09-12T12:45:56.230837" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/XvqSKXY1h1LbgdSH 
 path_url=/usuarios/XvqSKXY1h1LbgdSH 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-09-12T12:45:56.231137" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/XvqSKXY1h1LbgdSH 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '37f589d72d1772360de914588dfa551c', 'date': 'Fri, 12 Sep 2025 15:45:56 GMT', 'server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg time="2025-09-12T12:45:56.231384" level="INFO">/Users/mario/Library/Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2025-09-12T12:45:56.231759" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T12:45:56.055896" elapsed="0.175931"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-09-12T12:45:56.232065" elapsed="0.000160"/>
</return>
<arg>${ID_USUARIO_SECUNDARIO}</arg>
<status status="PASS" start="2025-09-12T12:45:56.055510" elapsed="0.177028"/>
</kw>
<arg>DELETE Usuario por ID</arg>
<arg>${ID_USUARIO_SECUNDARIO}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2025-09-12T12:45:56.055270" elapsed="0.177346"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:56.054902" elapsed="0.177804"/>
</kw>
<tag>happy_path</tag>
<tag>TC10</tag>
<tag>US001</tag>
<status status="PASS" start="2025-09-12T12:45:55.849045" elapsed="0.383824"/>
</test>
<test id="s1-s3-s1-t6" name="US001-TC12: Deletar um usuário existente" line="39">
<kw name="GIVEN que eu tenha um usuário já cadastrado">
<kw name="Log" owner="BuiltIn">
<msg time="2025-09-12T12:45:56.234991" level="INFO">Usando usuário base com ID: tuy7CYSh84lGwQjL</msg>
<arg>Usando usuário base com ID: ${ID_USUARIO_BASE}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-09-12T12:45:56.234745" elapsed="0.000307"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:56.234248" elapsed="0.000869"/>
</kw>
<kw name="WHEN eu envio uma requisição DELETE para o ID deste usuário">
<kw name="DELETE Usuario por ID" owner="api_keywords">
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-09-12T12:45:56.422740" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/tuy7CYSh84lGwQjL 
 path_url=/usuarios/tuy7CYSh84lGwQjL 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-09-12T12:45:56.423054" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/tuy7CYSh84lGwQjL 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '40c86bbc5cf655d80de914588dfa54ab', 'date': 'Fri, 12 Sep 2025 15:45:56 GMT', 'server': 'Google Frontend', 'Content-Length': '51'} 
 body={
    "message": "Registro excluído com sucesso"
} 
 </msg>
<msg time="2025-09-12T12:45:56.423250" level="INFO">/Users/mario/Library/Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2025-09-12T12:45:56.423622" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T12:45:56.235981" elapsed="0.187711"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-09-12T12:45:56.423943" elapsed="0.000176"/>
</return>
<msg time="2025-09-12T12:45:56.424550" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>${ID_USUARIO_BASE}</arg>
<status status="PASS" start="2025-09-12T12:45:56.235656" elapsed="0.188955"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:56.425738" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-09-12T12:45:56.425164" elapsed="0.000662"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:56.426425" level="INFO">${ID_USUARIO_BASE} = None</msg>
<arg>${ID_USUARIO_BASE}</arg>
<arg>${null}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-09-12T12:45:56.426120" elapsed="0.000339"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:56.235312" elapsed="0.191213"/>
</kw>
<kw name="THEN o usuário deve ser deletado com sucesso e status 200">
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T12:45:56.427811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T12:45:56.427222" elapsed="0.000654"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response.json()["message"]}</arg>
<arg>Registro excluído com sucesso</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-09-12T12:45:56.428007" elapsed="0.000437"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:56.426872" elapsed="0.001633"/>
</kw>
<tag>happy_path</tag>
<tag>TC12</tag>
<tag>US001</tag>
<status status="PASS" start="2025-09-12T12:45:56.233329" elapsed="0.195345"/>
</test>
<test id="s1-s3-s1-t7" name="US001-TC13: Tentar deletar um usuário inexistente" line="45">
<kw name="WHEN eu tento deletar um usuário com um ID que não existe">
<kw name="DELETE Usuario por ID" owner="api_keywords">
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-09-12T12:45:56.619598" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/id_inexistente_12345 
 path_url=/usuarios/id_inexistente_12345 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-09-12T12:45:56.620084" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/id_inexistente_12345 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '0db275c745bf79f00de914588dfa5285', 'date': 'Fri, 12 Sep 2025 15:45:56 GMT', 'server': 'Google Frontend', 'Content-Length': '46'} 
 body={
    "message": "Nenhum registro excluído"
} 
 </msg>
<msg time="2025-09-12T12:45:56.620316" level="INFO">/Users/mario/Library/Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2025-09-12T12:45:56.620676" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T12:45:56.430942" elapsed="0.189800"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-09-12T12:45:56.621005" elapsed="0.000178"/>
</return>
<msg time="2025-09-12T12:45:56.621624" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>id_inexistente_12345</arg>
<status status="PASS" start="2025-09-12T12:45:56.430294" elapsed="0.191385"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-09-12T12:45:56.622871" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-09-12T12:45:56.622311" elapsed="0.000611"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:56.429469" elapsed="0.193519"/>
</kw>
<kw name="THEN a API deve retornar a mensagem &quot;Nenhum registro excluído&quot; com status 200">
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-09-12T12:45:56.624355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-09-12T12:45:56.623758" elapsed="0.000665"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response.json()["message"]}</arg>
<arg>Nenhum registro excluído</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-09-12T12:45:56.624549" elapsed="0.000442"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:56.623350" elapsed="0.001692"/>
</kw>
<tag>bug_reportado</tag>
<tag>sad_path</tag>
<tag>TC13</tag>
<tag>US001</tag>
<status status="PASS" start="2025-09-12T12:45:56.428931" elapsed="0.196276"/>
</test>
<kw name="Deletar Usuario Base" type="TEARDOWN">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="DELETE Usuario por ID" owner="api_keywords">
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2025-09-12T12:45:56.796603" level="INFO">DELETE Request : url=https://serverest.dev/usuarios/None 
 path_url=/usuarios/None 
 headers={'User-Agent': 'python-requests/2.32.5', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-09-12T12:45:56.796931" level="INFO">DELETE Response : url=https://serverest.dev/usuarios/None 
 status=200, reason=OK 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'content-type': 'application/json; charset=utf-8', 'x-cloud-trace-context': '4812d9a4ab7638f70de914588dfa550d', 'date': 'Fri, 12 Sep 2025 15:45:56 GMT', 'server': 'Google Frontend', 'Content-Length': '46'} 
 body={
    "message": "Nenhum registro excluído"
} 
 </msg>
<msg time="2025-09-12T12:45:56.797138" level="INFO">/Users/mario/Library/Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:1097: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2025-09-12T12:45:56.797529" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>serverest</arg>
<arg>/usuarios/${id_usuario}</arg>
<arg>expected_status=any</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-09-12T12:45:56.626417" elapsed="0.171182"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-09-12T12:45:56.797817" elapsed="0.000137"/>
</return>
<arg>${ID_USUARIO_BASE}</arg>
<status status="PASS" start="2025-09-12T12:45:56.626197" elapsed="0.172144"/>
</kw>
<arg>DELETE Usuario por ID</arg>
<arg>${ID_USUARIO_BASE}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2025-09-12T12:45:56.625971" elapsed="0.172499"/>
</kw>
<status status="PASS" start="2025-09-12T12:45:56.625772" elapsed="0.172834"/>
</kw>
<doc>Cenários de teste para o endpoint /usuarios, cobrindo a User Story US001.</doc>
<status status="PASS" start="2025-09-12T12:45:54.323343" elapsed="2.475337"/>
</suite>
<status status="PASS" start="2025-09-12T12:45:54.321373" elapsed="2.478940"/>
</suite>
<status status="PASS" start="2025-09-12T12:45:50.827066" elapsed="5.973991"/>
</suite>
<statistics>
<total>
<stat pass="15" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">bug_reportado</stat>
<stat pass="6" fail="0" skip="0">happy_path</stat>
<stat pass="4" fail="0" skip="0">sad_path</stat>
<stat pass="2" fail="0" skip="0">TC01</stat>
<stat pass="2" fail="0" skip="0">TC02</stat>
<stat pass="1" fail="0" skip="0">TC03</stat>
<stat pass="1" fail="0" skip="0">TC06</stat>
<stat pass="1" fail="0" skip="0">TC09</stat>
<stat pass="1" fail="0" skip="0">TC10</stat>
<stat pass="1" fail="0" skip="0">TC12</stat>
<stat pass="1" fail="0" skip="0">TC13</stat>
<stat pass="7" fail="0" skip="0">US001</stat>
<stat pass="3" fail="0" skip="0">US003</stat>
</tag>
<suite>
<stat name="Tests" id="s1" pass="15" fail="0" skip="0">Tests</stat>
<stat name="Login" id="s1-s1" pass="5" fail="0" skip="0">Tests.Login</stat>
<stat name="Login Test" id="s1-s1-s1" pass="5" fail="0" skip="0">Tests.Login.Login Test</stat>
<stat name="Produtos" id="s1-s2" pass="3" fail="0" skip="0">Tests.Produtos</stat>
<stat name="Produtos Test" id="s1-s2-s1" pass="3" fail="0" skip="0">Tests.Produtos.Produtos Test</stat>
<stat name="Usuarios" id="s1-s3" pass="7" fail="0" skip="0">Tests.Usuarios</stat>
<stat name="Usuarios Test" id="s1-s3-s1" pass="7" fail="0" skip="0">Tests.Usuarios.Usuarios Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
